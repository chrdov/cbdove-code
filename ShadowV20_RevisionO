function GetNearbyHumanoids(Position,Distance,OwnerCharacter)
	if OwnerCharacter == nil then
		OwnerCharacter = Instance.new("Model")
		OwnerCharacter.Name = "nil"
	end
	local Humanoids = {}
	local Descendants = game.Workspace:GetDescendants()
	for _,Object in pairs(Descendants) do
		if Object:IsA("Model") and Object ~= OwnerCharacter then
			local Humanoid = Object:FindFirstChildOfClass("Humanoid")
			if Humanoid ~= nil then
				local HumanoidRootPart = Object:FindFirstChild("HumanoidRootPart")
				if HumanoidRootPart ~= nil then
					if Distance > (HumanoidRootPart.Position - Position).Magnitude then
						Distance = (HumanoidRootPart.Position - Position).Magnitude
						table.insert(Humanoids,1,Humanoid)
					end
				end
			end
		end
	end
	return Humanoids
end
local Player = owner -- Client Portion: https://github.com/chrdov/cbdove-code/raw/master/ClientControlsV5
local Character = Player.Character
function NewHurtSphere(Position,Distance,Damage)
	local debounce = false
	local function DoDamage()
		if debounce then return end
		debounce = true
		local Humanoids = GetNearbyHumanoids(Position,Distance,Character)
		for _,Humanoid in pairs(Humanoids) do
			Humanoid:TakeDamage(Damage)
		end
	end
	return DoDamage
end
function NewExplosionPart(Position,Distance)
	local TweenService = game:GetService("TweenService")
	local TweenProperties = {Size = Vector3.new(2,2,2)}
	local o1 = Instance.new("Part")
	local o2 = Instance.new("Sound")
	o1.BottomSurface = Enum.SurfaceType.Smooth
	o1.TopSurface = Enum.SurfaceType.Smooth
	o1.Anchored = true
	o1.CanCollide = false
	o1.Color = Color3.new(0,0,0)
	o1.Shape = Enum.PartType.Ball
	o1.Size = Vector3.new(2,2,2)
	o1.Transparency = 0
	o1.Material = Enum.Material.SmoothPlastic
	o1.CFrame = CFrame.new(Position)
	o2.Name = "Explode"
	o2.Parent = o1
	o2.PlaybackSpeed = 4
	o2.SoundId = "rbxassetid://12222084"
	o2.Volume = 1
	local Tween = TweenService:Create(o1,TweenInfo.new(o2.TimeLength / (o2.PlaybackSpeed * 4)),TweenProperties)
	local debounce = false
	local function PlayExplosion()
		if debounce then return end
		debounce = true
		local Debris = game:GetService("Debris")
		o1.Parent = script
		Tween:Play()
		o2:Play()
		Debris:AddItem(o1,o2.TimeLength / o2.PlaybackSpeed)
	end
	return PlayExplosion
end
local CloneT = Instance.new("Model")
for _,Part in pairs(Character:GetChildren()) do
	if (Part.Name ~= "HumanoidRootPart" and Part:IsA("BasePart")) then
		local PClone = Part:Clone()
		PClone.Color = Color3.new()
		PClone.Material = Enum.Material.SmoothPlastic
		for _,Thing in pairs(PClone:GetChildren()) do
			if (not Thing:IsA("DataModelMesh")) then
				Thing:Destroy()
			else
				Thing.Scale = Thing.Scale + Vector3.new(0.15,0.15,0.15)
				Thing.Offset = Thing.Offset + Vector3.new(0,0.05,0)
			end
		end
		PClone.Parent = CloneT
	end
end
local Humanoid = Character:FindFirstChildOfClass("Humanoid")
Character.Health.Disabled = true
if Humanoid ~= nil then
	Humanoid.MaxHealth = 1000000
	Humanoid.Health = Humanoid.MaxHealth
end
local KeyDown = Instance.new("RemoteEvent",Character)
local KeyUp = Instance.new("RemoteEvent",Character)
local MouseMove = Instance.new("RemoteEvent",Character)
KeyDown.Name = "KeyDown"
KeyUp.Name = "KeyUp"
MouseMove.Name = "MouseMove"
local InvisParts = {}
local debounce = {}
local heldKeys = {}
local Invisible = false
local Target = {}
local FF
local Counter = 1/2
KeyDown.OnServerEvent:Connect(function(Plr,Key)
	if Plr == Player and heldKeys[Key] == nil then
		heldKeys[Key] = true
		if debounce[Key] == nil then
			debounce[Key] = true
			if Key == "q" then
				if not Invisible then
					Counter = 1/2
					if FF == nil then
						FF = Instance.new("ForceField",Character)
						FF.Visible = false
					end
					for _,Part in pairs(Character:GetDescendants()) do
						if (Part.Name ~= "HumanoidRootPart" and Part:IsA("BasePart")) or Part:IsA("Decal") then
							InvisParts[Part] = Part.Transparency
							local TweenService = game:GetService("TweenService")
							local TweenProperties = {Transparency = 1}
							local Tween = TweenService:Create(Part,TweenInfo.new(1/4),TweenProperties)
							Tween:Play()
						elseif Part:IsA("Humanoid") then
							spawn(function()
								wait(1/4)
								Part.WalkSpeed = Part.WalkSpeed * 1.5
								Part.MaxHealth = Part.MaxHealth * 100
								Part.Health = Part.Health * 100
							end)
						end
					end
					Invisible = not Invisible
					wait(1/2)
				elseif Invisible then
					if FF ~= nil then
						FF:Destroy()
						FF = nil
					end
					for _,Part in pairs(Character:GetDescendants()) do
						if (Part.Name ~= "HumanoidRootPart" and Part:IsA("BasePart")) or Part:IsA("Decal") then
							local TweenService = game:GetService("TweenService")
							local TweenProperties = {Transparency = InvisParts[Part]}
							local Tween = TweenService:Create(Part,TweenInfo.new(1/4),TweenProperties)
							Tween:Play()
							InvisParts[Part] = nil
						elseif Part:IsA("Humanoid") then
							spawn(function()
								Part.WalkSpeed = Part.WalkSpeed / 1.5
								Part.Health = Part.Health / 100
								Part.MaxHealth = Part.MaxHealth / 100
							end)
						end
					end
					wait(1/2)
					Invisible = not Invisible
				end
			elseif Key == "e" then
				local Position = Target.Point
				local Distance = 10
				local Damage = 10
				local Explode = NewExplosionPart(Position,Distance)
				local DoDamage = NewHurtSphere(Position,Distance,Damage)
				Explode()
				DoDamage()
				wait(1/4)
			end
			debounce[Key] = nil
		end
	end
end)
local RunService = game:GetService("RunService")
RunService.Heartbeat:Connect(function(x)
	if Character.Parent ~= nil then
		local TweenService = game:GetService("TweenService")
		local Debris = game:GetService("Debris")
		if Invisible then
			Counter = Counter - x
			if Counter < 0 then
				Counter = 0
			end
			if Counter == 0 and Invisible then
				Counter = 1/2
				local Clone = CloneT:Clone()
				for _,Part2 in pairs(CloneT:GetChildren()) do
					local Part1 = Character:FindFirstChild(Part2.Name)
					if Part1 ~= nil then
						Part2.CFrame = Part1.CFrame
					end
				end
				Clone.Parent = game.Workspace.Terrain
				for _,Part in pairs(Clone:GetDescendants()) do
					if (Part.Name ~= "HumanoidRootPart" and Part:IsA("BasePart")) or Part:IsA("Decal") then
						Part.Transparency = 0.75
						if (Part.Name ~= "HumanoidRootPart" and Part:IsA("BasePart")) then
							Part.Anchored = true
							Part.CanCollide = false
						end
						local TweenService = game:GetService("TweenService")
						local TweenProperties = {Transparency = 1}
						local Tween = TweenService:Create(Part,TweenInfo.new(1/4),TweenProperties)
						Tween:Play()
					end
				end
				Debris:AddItem(Clone,1/4)
			end
		end
	end
end)
KeyUp.OnServerEvent:Connect(function(Plr,Key)
	if Plr == Player and heldKeys[Key] == true then
		heldKeys[Key] = nil
	end
end)
MouseMove.OnServerEvent:Connect(function(Plr,TargetPoint,TargetPart)
	if Plr == Player then
		Target.Point = TargetPoint
		Target.Part = TargetPart
	end
end)
