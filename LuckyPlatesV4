local function NewPlate(Position,Name,Parent,Size)
	local o1 = Instance.new("Part")
	o1.Name = Name
	o1.Material = Enum.Material.SmoothPlastic
	o1.Anchored = true
	o1.Locked = true
	o1.Size = Size or Vector3.new(16, 1, 16)
	o1.Position = Position
	o1.CFrame = CFrame.new(Position)
	o1.BottomSurface = Enum.SurfaceType.Smooth
	o1.TopSurface = Enum.SurfaceType.Smooth
	o1.Parent = Parent or script
	wait(0.1)
	return o1
end
local Players = game:GetService("Players")
function GetPlayersOnTeam(Team)
	local TeamPlayers = {}
	for _,Player in pairs(Players:GetPlayers()) do
		if Player.Team == Team and Player.Neutral == false then
			table.insert(TeamPlayers,#TeamPlayers + 1,Player)
		end
	end
	return TeamPlayers
end
local Teams = game:GetService("Teams")
local Dead = Instance.new("Team",Teams)
Dead.TeamColor = BrickColor.new("Bright red")
Dead.Name = "Plates (Dead)"
Dead.AutoAssignable = false
local Alive = Instance.new("Team",Teams)
Alive.TeamColor = BrickColor.new("Bright blue")
Alive.Name = "Plates (Alive)"
Alive.AutoAssignable = false
Teams.DescendantRemoving:Connect(function(Team)
	if Team == Dead then
		Dead = Instance.new("Team")
		wait()
		Dead.TeamColor = BrickColor.new("Bright red")
		Dead.Name = "Plates (Dead)"
		Dead.AutoAssignable = false
		Dead.Parent = Teams
	elseif Team == Alive then
		Alive = Instance.new("Team")
		wait()
		Alive.TeamColor = BrickColor.new("Bright blue")
		Alive.Name = "Plates (Alive)"
		Alive.AutoAssignable = false
		Alive.Parent = Teams
	end
end)
local Origin = Vector3.new((4096 * 16),0,(4096 * 16) - 24)
local Spacing = Vector3.new(48,0,48)
local Plates = Instance.new("Folder",script)
Plates.Name = "Plates"
local function OnPlayerAdded(Player)
	Player.Chatted:Connect(function(Message,Recipient)
		if Recipient == nil then
			if Message == "/plates join" and Player.TeamColor == BrickColor.White() and Player.Neutral == true and (#(GetPlayersOnTeam(Dead)) + #(GetPlayersOnTeam(Alive))) < 9 then
				Player.Team = Dead
				Player.Neutral = false
			elseif Message == "/plates leave" and (Player.Team == Dead or Player.Team == Alive) and Player.Neutral == false then
				if Player.Team == Alive then
					Player:LoadCharacter()
				end
				Player.TeamColor = BrickColor.White()
				Player.Neutral = true
			end
		end
	end)
	Player.CharacterAdded:Connect(function(Character)
		Character.Humanoid.Died:Connect(function()
			if Player.Team == Alive then
				print((Player.Name).." died.")
				Player.Team = Dead
				local Plate = Plates:FindFirstChild(Player.Name)
				if Plate then
					Plate.BrickColor = BrickColor.new("Bright red")
					Plate.Transparency = 0.5
					local Debris = game:GetService("Debris")
					Debris:AddItem(Plate,2)
				end
			end
		end)
	end)
	if Player.Character ~= nil then
		local Character = Player.Character
		Character.Humanoid.Died:Connect(function()
			if Player.Team == Alive then
				print((Player.Name).." died.")
				Player.Team = Dead
				local Plate = Plates:FindFirstChild(Player.Name)
				if Plate then
					Plate.BrickColor = BrickColor.new("Bright red")
					Plate.Transparency = 0.5
					local Debris = game:GetService("Debris")
					Debris:AddItem(Plate,2)
				end
			end
		end)
	end
end
Players.PlayerAdded:Connect(OnPlayerAdded)
	for _,Player in pairs(Players:GetPlayers()) do
		OnPlayerAdded(Player)
	end
while true do
	print("Waiting for Players... do /plates join")
	repeat wait() until (#(GetPlayersOnTeam(Dead)) + #(GetPlayersOnTeam(Alive))) > 1
	while (#(GetPlayersOnTeam(Dead)) + #(GetPlayersOnTeam(Alive))) > 1 do
		Hint.Text = ""
		print("Starting in 10 seconds...")
		wait(2)
		Hint.Text = ""
		wait(8)
		if (#(GetPlayersOnTeam(Dead)) + #(GetPlayersOnTeam(Alive))) > 1 then
			local DeadPlayers = GetPlayersOnTeam(Dead)
			for z = 0,5,5 do
				for x = 1,5,1 do
					local Player = DeadPlayers[x + z]
					if Player ~= nil then
						local Plate = NewPlate(Origin + (Spacing * Vector3.new(x,0,z / 5)),Player.Name,Plates)
						if Player.Character == nil then
							Player:LoadCharacter(true)
						end
						Player.Team = Alive
						Player.Character:MoveTo(Plate.Position)
					else
						local Plate = NewPlate(Origin + (Spacing * Vector3.new(x,0,z / 5)),"Dummy",Plates)
					end
				end
			end
			if #(GetPlayersOnTeam(Alive)) > 1 then
				print("First event in 15 seconds.")
				wait(5)
				while #(GetPlayersOnTeam(Alive)) > 1 do
					math.randomseed(os.time())
					local EventID = math.random(1,3)
					print("In 10 seconds...")
					if EventID == 1 then
						local PlateID = math.random(#(Plates:GetChildren()))
						print("One Plate will get bigger by 4.")
						wait(10)
						for x,Plate in pairs(Plates:GetChildren()) do
							if PlateID == x then
								print(Plate.Name)
								Plate.Size = Plate.Size + Vector3.new(4,0,4)
							end
						end
						print("Next event in 15 seconds.")
					elseif EventID == 2 then
						local PlateID = math.random(#(Plates:GetChildren()))
						print("One Plate will get smaller by 4.")
						wait(10)
						for x,Plate in pairs(Plates:GetChildren()) do
							if PlateID == x then
								print(Plate.Name)
								local PlateSize = Plate.Size - Vector3.new(4,0,4)
								if PlateSize.X <= 0 or PlateSize.Z <= 0 then
									Plate:Destroy()
								else
									Plate.Size = PlateSize
								end
							end
						end
						print("Next event in 15 seconds.")
					elseif EventID == 3 then
						local PlateID = math.random(#(Plates:GetChildren()))
						print("One Plate will become a ghost plate.")
						wait(10)
						for x,Plate in pairs(Plates:GetChildren()) do
							if x == PlateID then
								print(Plate.Name)
								Plate.BrickColor = BrickColor.new("Bright red")
								Plate.Transparency = 0.5
								local Debris = game:GetService("Debris")
								Debris:AddItem(Plate,2)
							end
						end
						print("Next event in 15 seconds.")
					elseif EventID == 4 then
						local AlivePlayers = GetPlayersOnTeam(Alive)
						local PlayerID = math.random(#AlivePlayers)
						print("One Player will lose a quarter of their max health, else they will die on the spot.")
						wait(10)
						for x,Player in pairs(AlivePlayers) do
							if x == PlayerID then
								if Player.Character:FindFirstChild("Humanoid") ~= nil then
									local NewHealth = Player.Character.Humanoid.Health - (Player.Character.Humanoid.MaxHealth / 4)
									Player.Character.Humanoid.Health = NewHealth
									spawn(function()
										wait()
										if Player.Character.Humanoid.Health > NewHealth then
											Player.Character:BreakJoints()
										else
											print((Player.Name).." lost health.")
										end
									end)
								elseif Player.Character:FindFirstChild("Humanoid") == nil then
									spawn(function()
										wait()
										if Player.Character:FindFirstChild("Humanoid") == nil then
											Player.Character:BreakJoints()
										end
									end)
								end
							end
						end
						print("Next event in 15 seconds.")
					end
					wait(5)
				end
			end
			local AlivePlayers = GetPlayersOnTeam(Alive)
			for _,Player in pairs(AlivePlayers) do
				print((Player.Name).." wins!")
				Player.Team = Dead
				Player:LoadCharacter()
			end
			Plates:ClearAllChildren()
			wait(5)
		end
	end
	print("Not enough players, restarting...")
	wait(5)
end
