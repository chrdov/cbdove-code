local Player = owner -- Client Portion: https://github.com/chrdov/cbdove-code/raw/master/ClientControlsV5
local Character = Player.Character
local KeyDown = Instance.new("RemoteEvent",Character)
local KeyUp = Instance.new("RemoteEvent",Character)
local MouseMove = Instance.new("RemoteEvent",Character)
KeyDown.Name = "KeyDown"
KeyUp.Name = "KeyUp"
MouseMove.Name = "MouseMove"
local InvisParts = {}
local debounce = {}
local heldKeys = {}
local Invisible = false
local Target = {}
KeyDown.OnServerEvent:Connect(function(Plr,Key)
	if Plr == Player and heldKeys[Key] == nil then
		heldKeys[Key] = true
		if debounce[Key] == nil then
			debounce[Key] = true
			if Key == "f" then
				if not Invisible then
					for _,Part in pairs(Character:GetDescendants()) do
						if (Part.Name ~= "HumanoidRootPart" and Part:IsA("BasePart")) or Part:IsA("Decal") then
							InvisParts[Part] = Part.Transparency
							local TweenService = game:GetService("TweenService")
							local TweenProperties = {Transparency = 1}
							local Tween = TweenService:Create(Part,TweenInfo.new(0.5),TweenProperties)
							Tween:Play()
						elseif Part:IsA("Humanoid") then
							spawn(function()
								Part.WalkSpeed = Part.WalkSpeed * 2
							end)
						end
					end
					Invisible = not Invisible
					wait(0.5)
				elseif Invisible then
					for _,Part in pairs(Character:GetDescendants()) do
						if (Part.Name ~= "HumanoidRootPart" and Part:IsA("BasePart")) or Part:IsA("Decal") then
							local TweenService = game:GetService("TweenService")
							local TweenProperties = {Transparency = InvisParts[Part]}
							local Tween = TweenService:Create(Part,TweenInfo.new(0.5),TweenProperties)
							Tween:Play()
							InvisParts[Part] = nil
						elseif Part:IsA("Humanoid") then
							spawn(function()
								wait(0.5)
								Part.WalkSpeed = Part.WalkSpeed / 2
							end)
						end
					end
					wait(0.5)
					Invisible = not Invisible
				end
			end
			debounce[Key] = nil
		end
	end
end)
spawn(function()
	local TweenService = game:GetService("TweenService")
	local Debris = game:GetService("Debris")
	while wait(1/20) do
		if Invisible then
			if Invisible then
				local Clone = Instance.new("Model")
				for _,Part in pairs(Character:GetChildren()) do
					if (Part:IsA("BasePart")) then
						local PClone = Part:Clone()
						PClone.Material = Enum.Material.SmoothPlastic
						for _,Thing in pairs(PClone:GetChildren()) do
							if (not Thing:IsA("DataModelMesh")) then
								Thing:Destroy()
							end
						end
						PClone.Parent = Clone
					end
				end
				Clone.Parent = game.Workspace
				for _,Part in pairs(Clone:GetDescendants()) do
					if (Part.Name ~= "HumanoidRootPart" and Part:IsA("BasePart")) or Part:IsA("Decal") then
						Part.Transparency = 0.5
						if (Part.Name ~= "HumanoidRootPart" and Part:IsA("BasePart")) then
							Part.Anchored = true
							Part.CanCollide = false
							Part.Color = Color3.new()
						end
						local TweenService = game:GetService("TweenService")
						local TweenProperties = {Transparency = 1}
						local Tween = TweenService:Create(Part,TweenInfo.new(0.5),TweenProperties)
						Tween:Play()
					end
				end
				spawn(function()
					wait(0.5)
					Clone:Destroy()
				end)
			end
		end
	end
end)
KeyUp.OnServerEvent:Connect(function(Plr,Key)
	if Plr == Player and heldKeys[Key] == true then
		heldKeys[Key] = nil
	end
end)
MouseMove.OnServerEvent:Connect(function(Plr,TargetPoint,TargetPart)
	if Plr == Player then
		Target.Point = TargetPoint
		Target.Part = TargetPart
	end
end)
